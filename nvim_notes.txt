Lazy modules are saved to ~/.local/share/nvim/lazy/
<leader> is spacebar

Help
<leader> sh  - Search help
<leader> sk  - Search keybindings
:map  - Show currently mapped keys
:LspInfo  - Show LSP info
:Masonry  - Show Mason info (LSP, DAP, Linter, Formatter)

Navigation
C-f  -  Scroll forward one screen
C-b  -  Scroll backward one screen
C-d  -  Scroll forward half a screen
C-u  -  Scroll backward half a screen
M  - Move to middle of screen
f <char>  - Move to next occurrence of <char> (subsequent presses of 'f' move to next occurrence)
F <char>  - Move to previous occurrence of <char> (subsequent presses of 'f' move to previous occurrence)
^  - Move to first non-blank character of line
%  - Move to matching bracket, paren, or brace
*  - Move to next occurrence of word under cursor, or the highlighted text in visual mode
#  - Move to previous occurrence of word under cursor, or the highlighted text in visual mode
)  - Move forward one sentence
(  - Move backward one sentence
}  - Move forward one paragraph
{  - Move backward one paragraph
w  - Move forward one word
b  - Move backward one word
C-o  - Retrace movements backwards (go back to where you were before)
C-i  - Retrace movements forwards (go forward to where you were before)
<leader> sb  - Grep inside current buffer
Visual mode: <leader> sW  - Search for current selection (cwd)

Registers
<leader> s"  - Show registers
There are ten types of registers:
1. The unnamed register ""
2. 10 numbered registers "0 to "9
3. The small delete register "-
4. 26 named registers "a to "z or "A to "Z
5. Three read-only registers ":, "., "%
6. Alternate buffer register "#
7. The expression register "=
8. The selection registers "* and "+
9. The black hole register "_
10. Last search pattern register "/
:dis  - Show registers

Marks
'a - 'z  - lowercase marks, valid within one file
'A - 'Z  - uppercase marks, also called file marks, valid between files
Lowercase marks can be used in combination with operators.  For example: "d't" deletes the lines from the cursor position to mark 't'. 
m{a-zA-Z}  - Set mark {a-zA-Z} at cursor position
'{a-z}  - Move to line containing mark {a-z}
`{a-z}  - Move to position where mark {a-z} was set
:marks  - List all the current marks
'.  - Move to last edited line
`.  - Move to last edited position
'[  - Move to start of last change
']  - Move to end of last change
''  - Move to position before last jump
``  - Move to position before last jump
'^  - Move to position where last insert started
<leader> sm  - Jump to mark / show marks

File Navigation
<leader><space>  - Find files (root dir). This opens Telescope file finder at the directory the currently open file is. Also <leader> ff
<leader> fF  - Find files (cwd). Opens telescope file finder at the root of the workspace.
<leader> sG  - Grep (cwd).
<leader> sg  - Grep (root dir).
<leader> E  - Open file explorer sidebar (cwd) (this is called NeoTree)
<leader> e  - Open file explorer sidebar (root dir)
<space> fp  - Open telescope file browser
<leader> fg  - Open telescope live grep with args. This allows you to add arguments to the underlying ripgrep command.
               For example: "_drm" -g 'CMakeLists.txt'
?  - Show keybindings (while in the NeoTree window)

Jumps
Return to the position before the latest jump with "''" or "``".
:jumps  - List all the jumps
G  - Move to end of file
/  - Search forward
?  - Search backward
n  - Repeat search in same direction
N  - Repeat search in opposite direction
%  - Move to matching bracket, paren, or brace
L  - Move to bottom of screen (? maybe doesn't work)
M  - Move to middle of screen (? maybe doesn't work)
H  - Move to top of screen (? maybe doesn't work)
(  - Move backward one sentence)
)  - Move forward one sentence
{  - Move backward one paragraph
}  - Move forward one paragraph
:s  - Open search and replace (searches in current buffer)
:%s  - Open search and replace (searches in all buffers)

Searching
/  - Search forward (my setup is case insensitive, in fact don't use capitals because it screws up the search)
?  - Search backward
n  - Repeat search in same direction
N  - Repeat search in opposite direction
<space> /  - Grep in root dir
<leader> sw  - Grep word under cursor (root dir)
<leader> sW  - Grep word under cursor (cwd)
Find in files:
  1) <leader> sG  - Open live_grep (telescope)
  2) Start typing
  3) Realize that you need to scope to directory
  4) <Ctrl-f>
  5) Select directory
  6) Get returned to live_grep, scoped to the directory you selected and with your search args still populated
Find and Replace One Occurrence at a Time:
  1) Execute a regular search with /.
  2) Use the keystroke cgn on the first result to replace it.
  3) Type n or N to go to the next result.
  4) Use . to replace the occurrence with the same replacement, or go to the next result if you want to keep it.
Search and replace with confirmation
  :%s/foo/bar/gc

gn  - Select next search match (i.e. find next match and select it in visual mode)
gN  - Select previous search match
cgn  - Change next search match
dgn  - Delete next search match
ygn  - Yank next search match
gUgn  - Uppercase next search match

Editing
A  - append at end of line
I  - insert at beginning of line
g~ {motion}  - switch case for text covered by motion
<leader> s" - Show registers
u  - undo
C-r  - redo
C-v - visual block mode
C-v [select column] S-i [insert text] ESC - insert text in column
S-v - visual line mode

Code
K  - open hover
C-x C-o  - omnifunc (insert mode)
]h  - next hunk (diff)
[h  - prev hunk
gD  - goto declaration
gd  - goto definition
gr  - goto references
<leader> sg  - live grep of files in workspace
gcc  - comment line
<leader> cR  - switch between source and header file
gco  - Insert comment to the next line and enters INSERT mode
gcO  - Insert comment to the previous line and enters INSERT mode
gcA  - Insert comment to end of the current line and enters INSERT mode
<leader>bf  - format selection (visual mode)

Copilot
:Copilot panel  - open copilot panel to preview suggestions in a split window

Buffers
]b  - next buffer
[b  - previous buffer
<leader> ,  - switch buffer
:e  - reload file

Windows
C-w w  - switch to other window
C-w o  - close other windows

Git
<leader> ghb  - git blame line
<leader> gg  - LazyGit

Flash
S  - Flash Treesitter (normal mode). All parents of the Treesitter node under your cursor are highlighted with a label for quick selection of a specific Treesitter node. Use ; and , to increase/decrease the selection.
f{char} or F{char}  - Jump forward or backward to the [count]'th occurrence of {char} in the current line. The cursor is placed on {char} inclusive. Repeat motion with f, or undo motion with F. Can also use ; and ,
t{char} or T{char}  - Same as f{char} or F{char}, except the cursor is placed on {char} exclusive.
[operator]R  - Treesitter search. For example, yR will enter a flash search and then yank the selected treesitter node. dR would delete the selected node.
[operator]r  - Opens flash in remote mode. This is similar to R, but will return you to the original window/position.
               For example, yr will start yanking and open flash. Select a label to set the cursor position. Perform a motion, like iw or start flash Treesitter with S.
               The yank will be performed and the cursor will be returned to the original position.


:Telescope notify  - view notification history
:Noice telescope  - view Noice message history (probably more useful than the above)
